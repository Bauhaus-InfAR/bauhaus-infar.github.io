[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome to InfAR @ Bauhaus-Uni Weimar",
    "section": "",
    "text": "Notion\nMiro board\nDatasets"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "posts/data_cleaning.html#descriptives",
    "href": "posts/data_cleaning.html#descriptives",
    "title": "Data cleaning",
    "section": "Descriptives",
    "text": "Descriptives\nThe Neufert 4.0 dataset comprised data from a total of N = 37,174 apartments.\n\n\n\nIn the first step, we excluded flats that were either underground or above 6th floor (n = 2,271), had a total are outside of the 25-200 m2 range (n = 1,094), lacked data on room noise (n = 4) or room sunlight (n = 4), or had a value of zero for either of these two variables (n = 810). As only a small number of flats (n = 387) had more than five rooms, these were also excluded. This resulted in a sample size of N = 32,990 apartments, whose characteristics are shown in Figure 1.\n\n\n\n\n\nFigure 1: Distributions of the main variables of interest after the initial data cleaning."
  },
  {
    "objectID": "posts/data_cleaning.html#shape-clusters",
    "href": "posts/data_cleaning.html#shape-clusters",
    "title": "Data cleaning",
    "section": "Shape clusters",
    "text": "Shape clusters\nTo identify clusters that contain apartments of with the same layout, we devised the following algorithm:\nFirst, to account for potential rotation of the apartments, we oriented them along the horizontal (x-axis) and the vertical (y-axis). This was done byt aligning the longest polygon edge within each apartments along the horizontal.\nNext, we converted the vector graphics representation of the apartments to 224×224 black and white raster representation that contained only area geometries (rooms, corridors, shafts, balconies etc. but not walls, columns, doors, or windows). Each such 224×224 matrix contained only values of 0 (black) and 1 (white).\nThese matrices were then used to compare to get a measure of distance between the apartment geometries. The apartments were first grouped according to number of rooms. Within each group, we then selected a random apartment as a reference matrix (\\(\\mathbf{A}\\)) and calculated the sum of squared difference between this reference and all other apartnent matrices (\\(\\mathbf{B}\\)):\n\\[SS = \\sum_{i = 1}^{n}\\sum_{j = 1}^{n}(\\mathbf{B}_{ij} - \\mathbf{A}_{ij})^2\\]\nwhere \\(n\\) = 224, the number of pixels per dimension.\nAfter the initial aligning of the floor plans along the x and y axes, there remained eight possible orientations each floor plan could have (see Figure 2). For this reason, each floor plan matrix was transformed into eight different matrices that reflected these rotattions and only then compared to the reference using the sum of squares measure. This resulted in eight distance values per floor plan, yielding an eight-dimensional difference space, with each floorplan representing a point in this space and the reference flat positioned at its origin.\n\n\n\n\n\nFigure 2: All eight possible orientations of a single aligned apartment representation\n\n\n\n\nIn order to further expand this difference space, we selected another floor plan as reference and repeated this process. This floor plan was chosen from the middle of the distance distributions in the first iteration. Thee resulting 16-dimensional data set was then passed to the Self-Organising Map algorithm (SOM, Kohonen…) with a grid size equal to \\(floor(\\sqrt{n})\\), where \\(n\\) represents the number of floor plans with a given number of rooms. This procedure yielded grid position for each of the analysed floor plans, clustering them according to shape.\nThe above-described algorithm produced a somewhat liberal clusters, occasionally grouping dissimilar floor plans into a single cluster and so a further step was implemented to refine the clustering. Within each of the SOM clusters, we started by designating the first (position was arbitrary) floor plan as the reference and once again calculated the distance between it and the eight orientations of all other floor plans in the same SOM cluster. If the smallest of the eight distance measures was less than an empirically determined threshold of 2,000, the floorplan in question was added to a cluster defined by the reference floor plan. Next, the first of the remaining floor plans that did not pass the threshold was designated a reference for the next cluster and the process repeated. Once all floor plans withing the same SOM cluster were assorted, the algorithm was reiterated on the next SOM cluster.\nWhile the “refinement” algorithm could have been applied to the raw, unclustered data, the benefit of first creating the SOM clusters was a massive reduction of apartment-to-apartment comparisons and thus of computational resources.\nThis procedure yieded 11,173 rotation- and translation-invariant clusters of geometrically identical floor plans. The number of floor plans per cluster ranged from 1 to 96 (see Figure 3).\n\n\n\n\n\nFigure 3: Histogram of the distribution of number of floorplans per cluster"
  },
  {
    "objectID": "posts/data_cleaning.html#filtering-observations",
    "href": "posts/data_cleaning.html#filtering-observations",
    "title": "Data cleaning",
    "section": "Filtering observations",
    "text": "Filtering observations\nOnce the data was sorted into clusters accodring to the geometry of floor plans, we removed apartments that were deemed as essentially duplicates with respect to the values of average room noise and average room sunlight. These essential duplicates were identified as follows:\nFirst, we discretised the noise variable into categories by 5 dB increments and the sunlight variable by increments of 200 lx. Within each cluste and for each level of noise, we then retained one observation at every given level of the discretised sunlight variable (if available). The retained observation was the one with the lowest score on the original, continuous average room sunlight variable.\nThis further reduced the data set to the final size of n = 20,419 essentially unique apartments."
  },
  {
    "objectID": "posts/data_cleaning/index.html#descriptives",
    "href": "posts/data_cleaning/index.html#descriptives",
    "title": "Data cleaning",
    "section": "Descriptives",
    "text": "Descriptives\nThe Neufert 4.0 dataset comprises data from a total of N = 37,174 apartments.\n\n\n\nIn the first step, we excluded flats that were either underground or above 6th floor (n = 2,271), had a total are outside of the 25-200 m2 range (n = 1,094), lacked data on room noise (n = 4) or room sunlight (n = 4), or had a value of zero for either of these two variables (n = 810). As only a small number of flats (n = 387) had more than five rooms, these were also excluded. This resulted in a sample size of N = 32,990 apartments, whose characteristics are shown in Figure 1.\n\n\n\n\n\nFigure 1: Distributions of the main variables of interest after the initial data cleaning."
  },
  {
    "objectID": "posts/data_cleaning/index.html#shape-clusters",
    "href": "posts/data_cleaning/index.html#shape-clusters",
    "title": "Data cleaning",
    "section": "Shape clusters",
    "text": "Shape clusters\nTo identify clusters that contain apartments of with the same layout, we devised the following algorithm:\nFirst, to account for potential rotation of the apartments, we oriented them along the horizontal (x-axis) and the vertical (y-axis). This was done byt aligning the longest polygon edge within each apartments along the horizontal.\nNext, we converted the vector graphics representation of the apartments to 224×224 black and white raster representation that contained only area geometries (rooms, corridors, shafts, balconies etc. but not walls, columns, doors, or windows). Each such 224×224 matrix contained only values of 0 (black) and 1 (white).\nThese matrices were then used to compare to get a measure of distance between the apartment geometries. The apartments were first grouped according to number of rooms. Within each group, we then selected a random apartment as a reference matrix (\\(\\mathbf{A}\\)) and calculated the sum of squared difference between this reference and all other apartment matrices (\\(\\mathbf{B}\\)):\n\\[SS = \\sum_{i = 1}^{n}\\sum_{j = 1}^{n}(\\mathbf{B}_{ij} - \\mathbf{A}_{ij})^2\\]\nwhere \\(n\\) = 224, the number of pixels per dimension.\nAfter the initial aligning of the floor plans along the x and y axes, there remained eight possible orientations each floor plan could have (see Figure 2). For this reason, each floor plan matrix was transformed into eight different matrices that reflected these rotations and only then compared to the reference using the sum of squares measure. This resulted in eight distance values per floor plan, yielding an eight-dimensional difference space, with each floor plan representing a point in this space and the reference flat positioned at its origin.\n\n\n\n\n\nFigure 2: All eight possible orientations of a single aligned apartment representation\n\n\n\n\nIn order to further expand this difference space, we selected another floor plan as reference and repeated this process. This floor plan was chosen from the middle of the distance distributions in the first iteration. Thee resulting 16-dimensional data set was then passed to the Self-Organising Map algorithm (SOM, Kohonen…) with a grid size equal to \\(floor(\\sqrt{n})\\), where \\(n\\) represents the number of floor plans with a given number of rooms. This procedure yielded grid position for each of the analysed floor plans, clustering them according to shape.\nThe above-described algorithm produced a somewhat liberal clusters, occasionally grouping dissimilar floor plans into a single cluster and so a further step was implemented to refine the clustering. Within each of the SOM clusters, we started by designating the first (position was arbitrary) floor plan as the reference and once again calculated the distance between it and the eight orientations of all other floor plans in the same SOM cluster. If the smallest of the eight distance measures was less than an empirically determined threshold of 2,000, the floor plan in question was added to a cluster defined by the reference floor plan. Next, the first of the remaining floor plans that did not pass the threshold was designated a reference for the next cluster and the process repeated. Once all floor plans within the same SOM cluster were assorted, the algorithm was reiterated on the next SOM cluster.\nWhile the “refinement” algorithm could have been applied to the raw, unclustered data, the benefit of first creating the SOM clusters was a massive reduction of apartment-to-apartment comparisons and thus of computational resources.\nThis procedure yielded 11,173 rotation- and translation-invariant clusters of geometrically identical floor plans. The number of floor plans per cluster ranged from 1 to 96 (see Figure 3).\n\n\n\n\n\nFigure 3: Histogram of the distribution of number of floorplans per cluster"
  },
  {
    "objectID": "posts/data_cleaning/index.html#filtering-observations",
    "href": "posts/data_cleaning/index.html#filtering-observations",
    "title": "Data cleaning",
    "section": "Filtering observations",
    "text": "Filtering observations\nOnce the data was sorted into clusters according to the geometry of floor plans, we removed apartments that were deemed as essentially duplicates with respect to the values of average room noise and average room sunlight. These essential duplicates were identified as follows:\nFirst, we discretised the noise variable into categories by 5 dB increments and the sunlight variable by increments of 200 lx. Within each cluster and for each level of noise, we then retained one observation at every given level of the discretised sunlight variable (if available). The retained observation was the one with the lowest score on the original, continuous average room sunlight variable.\nThis further reduced the data set to the final size of n = 20,419 essentially unique apartments."
  },
  {
    "objectID": "index.html#documents",
    "href": "index.html#documents",
    "title": "Welcome to InfAR @ Bauhaus-Uni Weimar",
    "section": "Documents",
    "text": "Documents"
  },
  {
    "objectID": "data.html",
    "href": "data.html",
    "title": "Data",
    "section": "",
    "text": "Order By\n       Default\n         \n          File Name\n        \n         \n          Modified - Oldest\n        \n         \n          Modified - Newest\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\nFile Name\n\n\nModified\n\n\n\n\n\n\nall_flats_clustered.csv\n\n\n2/10/23, 12:04:09 PM\n\n\n\n\napartment_simulations.csv\n\n\n1/16/23, 2:52:50 PM\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "datasets/index.html",
    "href": "datasets/index.html",
    "title": "Datasets",
    "section": "",
    "text": "Order By\n       Default\n         \n          File Name\n        \n         \n          Modified - Oldest\n        \n         \n          Modified - Newest\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\nFile Name\n\n\nModified\n\n\n\n\n\n\nall_flats_clustered.csv\n\n\n10 Feb 2023, 12:04:09\n\n\n\n\napartment_simulations.csv\n\n\n16 Jan 2023, 14:52:50\n\n\n\n\n\n\nNo matching items"
  }
]